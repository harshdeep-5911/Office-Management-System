{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\New folder\\\\Office-Management-System\\\\frontend\\\\src\\\\components\\\\PrivateRoute.jsx\",\n  _s = $RefreshSig$();\nimport { Navigate } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\n\n// NOTE: no need for useAuthStatus as it's a duplicate of Redux state and only\n// used here in the PrivateRoute\n// No need for an outlet as we are not using nested routing\n\n// NOTE: We can remove use of the Spinner here as it will never show. We either\n// have a user in local storage that we trust is genuine or we dont'.\n// No request is made to the back end to authenticate the user so we don't\n// needthe Spinner\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children\n}) => {\n  _s();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  if (user) return children;\n  return /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/login\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n};\n_s(PrivateRoute, \"HA6wZhGeXNR9tzJ3aDGGsGCdOyI=\", false, function () {\n  return [useSelector];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["Navigate","useSelector","jsxDEV","_jsxDEV","PrivateRoute","children","_s","user","state","auth","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/asus/Desktop/New folder/Office-Management-System/frontend/src/components/PrivateRoute.jsx"],"sourcesContent":["import { Navigate } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\n// NOTE: no need for useAuthStatus as it's a duplicate of Redux state and only\r\n// used here in the PrivateRoute\r\n// No need for an outlet as we are not using nested routing\r\n\r\n// NOTE: We can remove use of the Spinner here as it will never show. We either\r\n// have a user in local storage that we trust is genuine or we dont'.\r\n// No request is made to the back end to authenticate the user so we don't\r\n// needthe Spinner\r\n\r\nconst PrivateRoute = ({ children }) => {\r\n  const { user } = useSelector((state) => state.auth)\r\n\r\n  if (user) return children\r\n\r\n  return <Navigate to='/login' />\r\n}\r\n\r\nexport default PrivateRoute\r\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,aAAa;;AAEzC;AACA;AACA;;AAEA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM;IAAEC;EAAK,CAAC,GAAGN,WAAW,CAAEO,KAAK,IAAKA,KAAK,CAACC,IAAI,CAAC;EAEnD,IAAIF,IAAI,EAAE,OAAOF,QAAQ;EAEzB,oBAAOF,OAAA,CAACH,QAAQ;IAACU,EAAE,EAAC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACjC,CAAC;AAAAR,EAAA,CANKF,YAAY;EAAA,QACCH,WAAW;AAAA;AAAAc,EAAA,GADxBX,YAAY;AAQlB,eAAeA,YAAY;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}