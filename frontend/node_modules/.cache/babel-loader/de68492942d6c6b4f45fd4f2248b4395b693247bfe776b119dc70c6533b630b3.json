{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Desktop\\\\New folder\\\\Office-Management-System\\\\frontend\\\\src\\\\ReportS\\\\report.js\",\n  _s = $RefreshSig$();\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getTickets } from '../features/tickets/ticketSlice';\nimport Spinner from '../components/Spinner';\nimport BackButton from '../components/BackButton';\nimport TicketItem from '../components/TicketItem';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Tickets() {\n  _s();\n  const {\n    tickets\n  } = useSelector(state => state.tickets);\n  const dispatch = useDispatch();\n\n  // NOTE: only need one useEffect here\n\n  useEffect(() => {\n    dispatch(getTickets());\n  }, [dispatch]);\n\n  // NOTE: no need for loading state, we can check for absence of tickets\n  // If we don't have tickets we are loading, if we do have tickets we just\n  // need to update the tickets with latest tickets in the background\n  if (!tickets) {\n    return /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(BackButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Tickets\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tickets\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ticket-headings\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), tickets.map(ticket => /*#__PURE__*/_jsxDEV(TicketItem, {\n        ticket: ticket\n      }, ticket._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Tickets, \"j1uA9pz+cGKLJQ9Mrpul+R9FXkE=\", false, function () {\n  return [useSelector, useDispatch];\n});\n_c = Tickets;\nexport default Tickets;\nvar _c;\n$RefreshReg$(_c, \"Tickets\");","map":{"version":3,"names":["useEffect","useSelector","useDispatch","getTickets","Spinner","BackButton","TicketItem","jsxDEV","_jsxDEV","Fragment","_Fragment","Tickets","_s","tickets","state","dispatch","fileName","_jsxFileName","lineNumber","columnNumber","children","className","map","ticket","_id","_c","$RefreshReg$"],"sources":["C:/Users/asus/Desktop/New folder/Office-Management-System/frontend/src/ReportS/report.js"],"sourcesContent":["import { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { getTickets } from '../features/tickets/ticketSlice'\r\nimport Spinner from '../components/Spinner'\r\nimport BackButton from '../components/BackButton'\r\nimport TicketItem from '../components/TicketItem'\r\n\r\nfunction Tickets() {\r\n  const { tickets } = useSelector((state) => state.tickets)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  // NOTE: only need one useEffect here\r\n\r\n  useEffect(() => {\r\n    dispatch(getTickets())\r\n  }, [dispatch])\r\n\r\n  // NOTE: no need for loading state, we can check for absence of tickets\r\n  // If we don't have tickets we are loading, if we do have tickets we just\r\n  // need to update the tickets with latest tickets in the background\r\n  if (!tickets) {\r\n    return <Spinner />\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <BackButton />\r\n      <h1>Tickets</h1>\r\n      <div className='tickets'>\r\n        <div className='ticket-headings'>\r\n          <div>Date</div>\r\n          <div>Product</div>\r\n          <div>Status</div>\r\n          <div></div>\r\n        </div>\r\n        {tickets.map((ticket) => (\r\n          <TicketItem key={ticket._id} ticket={ticket} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Tickets\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,UAAU,QAAQ,iCAAiC;AAC5D,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,OAAOC,UAAU,MAAM,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEjD,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM;IAAEC;EAAQ,CAAC,GAAGZ,WAAW,CAAEa,KAAK,IAAKA,KAAK,CAACD,OAAO,CAAC;EAEzD,MAAME,QAAQ,GAAGb,WAAW,CAAC,CAAC;;EAE9B;;EAEAF,SAAS,CAAC,MAAM;IACde,QAAQ,CAACZ,UAAU,CAAC,CAAC,CAAC;EACxB,CAAC,EAAE,CAACY,QAAQ,CAAC,CAAC;;EAEd;EACA;EACA;EACA,IAAI,CAACF,OAAO,EAAE;IACZ,oBAAOL,OAAA,CAACJ,OAAO;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACpB;EAEA,oBACEX,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACEZ,OAAA,CAACH,UAAU;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACdX,OAAA;MAAAY,QAAA,EAAI;IAAO;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBX,OAAA;MAAKa,SAAS,EAAC,SAAS;MAAAD,QAAA,gBACtBZ,OAAA;QAAKa,SAAS,EAAC,iBAAiB;QAAAD,QAAA,gBAC9BZ,OAAA;UAAAY,QAAA,EAAK;QAAI;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACfX,OAAA;UAAAY,QAAA,EAAK;QAAO;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAClBX,OAAA;UAAAY,QAAA,EAAK;QAAM;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACjBX,OAAA;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAU,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,EACLN,OAAO,CAACS,GAAG,CAAEC,MAAM,iBAClBf,OAAA,CAACF,UAAU;QAAkBiB,MAAM,EAAEA;MAAO,GAA3BA,MAAM,CAACC,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAC/C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACN,CAAC;AAEP;AAACP,EAAA,CAnCQD,OAAO;EAAA,QACMV,WAAW,EAEdC,WAAW;AAAA;AAAAuB,EAAA,GAHrBd,OAAO;AAqChB,eAAeA,OAAO;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}