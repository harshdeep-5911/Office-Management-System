{"ast":null,"code":"import axios from 'axios';\nconst API_URL = '/api/tickets/';\n\n// Create new ticket\nconst createTicket = async (ticketData, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.post(API_URL, ticketData, config);\n  return response.data;\n};\n\n// Get user tickets\nconst getTickets = async token => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.get(API_URL, config);\n  return response.data;\n};\n\n// Get user ticket\nconst getTicket = async (ticketId, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.get(API_URL + ticketId, config);\n  return response.data;\n};\n\n// Close ticket\nconst closeTicket = async (ticketId, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  };\n  const response = await axios.put(API_URL + ticketId, {\n    status: 'closed'\n  }, config);\n  return response.data;\n};\nconst ticketService = {\n  createTicket,\n  getTickets,\n  getTicket,\n  closeTicket\n};\nexport default ticketService;","map":{"version":3,"names":["axios","API_URL","createTicket","ticketData","token","config","headers","Authorization","response","post","data","getTickets","get","getTicket","ticketId","closeTicket","put","status","ticketService"],"sources":["C:/Users/asus/Desktop/New folder/Office-Management-System/frontend/src/features/tickets/ticketService.js"],"sourcesContent":["import axios from 'axios'\n\nconst API_URL = '/api/tickets/'\n\n// Create new ticket\nconst createTicket = async (ticketData, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  }\n\n  const response = await axios.post(API_URL, ticketData, config)\n\n  return response.data\n}\n\n// Get user tickets\nconst getTickets = async (token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  }\n\n  const response = await axios.get(API_URL, config)\n\n  return response.data\n}\n\n// Get user ticket\nconst getTicket = async (ticketId, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  }\n\n  const response = await axios.get(API_URL + ticketId, config)\n\n  return response.data\n}\n\n// Close ticket\nconst closeTicket = async (ticketId, token) => {\n  const config = {\n    headers: {\n      Authorization: `Bearer ${token}`,\n    },\n  }\n\n  const response = await axios.put(\n    API_URL + ticketId,\n    { status: 'closed' },\n    config\n  )\n\n  return response.data\n}\n\nconst ticketService = {\n  createTicket,\n  getTickets,\n  getTicket,\n  closeTicket,\n}\n\nexport default ticketService\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,eAAe;;AAE/B;AACA,MAAMC,YAAY,GAAG,MAAAA,CAAOC,UAAU,EAAEC,KAAK,KAAK;EAChD,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUH,KAAK;IAChC;EACF,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAACR,OAAO,EAAEE,UAAU,EAAEE,MAAM,CAAC;EAE9D,OAAOG,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,MAAMC,UAAU,GAAG,MAAOP,KAAK,IAAK;EAClC,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUH,KAAK;IAChC;EACF,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACY,GAAG,CAACX,OAAO,EAAEI,MAAM,CAAC;EAEjD,OAAOG,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,MAAMG,SAAS,GAAG,MAAAA,CAAOC,QAAQ,EAAEV,KAAK,KAAK;EAC3C,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUH,KAAK;IAChC;EACF,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACY,GAAG,CAACX,OAAO,GAAGa,QAAQ,EAAET,MAAM,CAAC;EAE5D,OAAOG,QAAQ,CAACE,IAAI;AACtB,CAAC;;AAED;AACA,MAAMK,WAAW,GAAG,MAAAA,CAAOD,QAAQ,EAAEV,KAAK,KAAK;EAC7C,MAAMC,MAAM,GAAG;IACbC,OAAO,EAAE;MACPC,aAAa,EAAE,UAAUH,KAAK;IAChC;EACF,CAAC;EAED,MAAMI,QAAQ,GAAG,MAAMR,KAAK,CAACgB,GAAG,CAC9Bf,OAAO,GAAGa,QAAQ,EAClB;IAAEG,MAAM,EAAE;EAAS,CAAC,EACpBZ,MACF,CAAC;EAED,OAAOG,QAAQ,CAACE,IAAI;AACtB,CAAC;AAED,MAAMQ,aAAa,GAAG;EACpBhB,YAAY;EACZS,UAAU;EACVE,SAAS;EACTE;AACF,CAAC;AAED,eAAeG,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}